{{#each dataObjectMappings}}
--
-- Link Satellite View definition for {{../generationSpecificMetadata.selectedDataObject.name}}.
--
-- This Link Satellite Satellite uses a zero record for each key. 
-- To demonstrate the assertion timeline, a expiry date/time stamp has been added as well.
-- This is not a recommended approach, but used to show the impacts of this design decision on the overall solution.
--

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[{{../conventions.vdwSchemaName}}].[{{../generationSpecificMetadata.selectedDataObject.name}}]') AND type in (N'V'))
DROP VIEW [{{../conventions.vdwSchemaName}}].[{{../generationSpecificMetadata.selectedDataObject.name}}]
GO

CREATE VIEW [{{../conventions.vdwSchemaName}}].[{{targetDataObject.name}}] AS
SELECT 
    HASHBYTES('MD5', {{#each businessKeyDefinitions}}{{#unless @first}} +{{/unless}}{{!-- Create the Surrogate Key using the Business Key and components --}}{{#each businessKeyComponentMappings}}
       ISNULL(RTRIM(CONVERT(NVARCHAR(100), {{targetDataItem.name}})), 'N/A') + '#~!'{{#unless @last}} +{{/unless}}{{/each}}{{/each}}{{#each businessKeyDefinitions}}{{#if @first}}
    ) AS {{surrogateKey}},{{/if}}{{/each}}
    [{{../conventions.loadDateTimeAttribute}}],
    [{{../conventions.sourceRowIdAttribute}}],    
    --COALESCE (
    --  LEAD (DATEADD(mcs,[{{../conventions.sourceRowIdAttribute}}], {{../conventions.loadDateTimeAttribute}}) ) OVER
    --  ( PARTITION BY {{#each businessKeyDefinitions}} {{!-- The Hub business key --}}{{#unless @first}},{{/unless}}
    --      {{#each businessKeyComponentMappings}}{{targetDataItem.name}}{{#unless @last}},{{/unless}}{{/each}}{{/each}}
    --     {{#each dataItemMappings}}{{#each targetDataItem.classifications}}{{#if classification}},{{../sourceDataItems.0.name}}{{/if}}{{/each}}{{/each}}
    --   ORDER BY {{../conventions.loadDateTimeAttribute}}),
    --   CAST( '9999-12-31' AS DATETIME)
    --) AS [{{../conventions.expiryDateTimeAttribute}}],
    --CASE
    --  WHEN ( RANK() OVER (PARTITION BY {{#each businessKeyDefinitions}}{{#unless @first}},{{/unless}}{{#each businessKeyComponentMappings}}
    --      {{targetDataItem.name}}{{#unless @last}},{{/unless}}{{/each}}{{/each}}
    --     {{#each dataItemMappings}}{{#each targetDataItem.classifications}}{{#if classification}},{{../sourceDataItems.0.name}}{{/if}}{{/each}}{{/each}}
    --     ORDER BY {{../conventions.loadDateTimeAttribute}} desc )) = 1
    --   THEN 'Y'
    --   ELSE 'N'
    --END AS [CURRENT_RECORD_INDICATOR],
    -1 AS {{../conventions.etlProcessAttribute}}, {{!-- List out the Control Framework attributes --}}
    {{../conventions.changeDataCaptureAttribute}},
    --{{../conventions.recordSourceAttribute}},
    --CASE
    --  WHEN {{../conventions.changeDataCaptureAttribute}} = 'D' THEN 'Y'
    --  ELSE 'N'
    --END AS [DELETED_RECORD_INDICATOR],
    HASHBYTES('MD5',
      ISNULL(RTRIM(CONVERT(NVARCHAR(100),{{../conventions.changeDataCaptureAttribute}})), 'N/A') + '#~!' +{{#each dataItemMappings}}
      ISNULL(RTRIM(CONVERT(NVARCHAR(100),{{targetDataItem.name}})), 'N/A') + '#~!'{{#unless @last}} +{{/unless}}{{/each}}
    ) AS [{{../conventions.recordChecksumAttribute}}],
    {{#each dataItemMappings}}
    [{{targetDataItem.name}}],
    {{/each}}
    ROW_NUMBER() OVER (PARTITION BY {{#each businessKeyDefinitions}}{{#unless @first}},{{/unless}}{{#each businessKeyComponentMappings}} {{!-- Create a row number to enable selection only the earliest row, ordered by date/time --}}
          {{targetDataItem.name}}{{#unless @last}},{{/unless}}{{/each}}{{/each}}
         {{#each dataItemMappings}}{{#each targetDataItem.classifications}}{{#if classification}},{{../targetDataItem.name}}{{/if}}{{/each}}{{/each}}
    ORDER BY {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}} {{!-- Create a row number to enable selection only the earliest row, ordered by date/time --}}
          {{targetDataItem.name}},{{/each}}{{/each}}
          {{#each dataItemMappings}}{{#each targetDataItem.classifications}}{{#if classification}}{{../targetDataItem.name}},{{/if}}{{/each}}{{/each}}
          {{../conventions.loadDateTimeAttribute}}
    ) AS ROW_NUMBER
FROM
   (
      SELECT 
         [{{../conventions.loadDateTimeAttribute}}],
         [{{../conventions.eventDateTimeAttribute}}],
         --[{{../conventions.recordSourceAttribute}}],
         [{{../conventions.sourceRowIdAttribute}}],
         [{{../conventions.changeDataCaptureAttribute}}],{{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}
         [{{targetDataItem.name}}],{{/each}}{{/each}}
         {{#each dataItemMappings}}
         [{{targetDataItem.name}}],
         {{/each}}
         [COMBINED_VALUE],
         CASE 
           WHEN LAG(COMBINED_VALUE,1,0x00000000000000000000000000000000) OVER (PARTITION BY {{#each businessKeyDefinitions}}{{#unless @first}},{{/unless}}{{#each businessKeyComponentMappings}}
              {{targetDataItem.name}}{{#unless @last}},{{/unless}}{{/each}}{{/each}} 
             {{#each dataItemMappings}}{{#each targetDataItem.classifications}}{{#if classification}},{{../targetDataItem.name}}{{/if}}{{/each}}{{/each}}
             ORDER BY [{{../conventions.loadDateTimeAttribute}}] ASC, [{{../conventions.eventDateTimeAttribute}}] ASC, [{{../conventions.changeDataCaptureAttribute}}] DESC) = COMBINED_VALUE
           THEN 'Same'
           ELSE 'Different'
         END AS [VALUE_CHANGE_INDICATOR],
         CASE 
           WHEN LAG([{{../conventions.changeDataCaptureAttribute}}],1,'') OVER (PARTITION BY {{#each businessKeyDefinitions}}{{#unless @first}},{{/unless}}{{#each businessKeyComponentMappings}}
              {{targetDataItem.name}}{{#unless @last}},{{/unless}}{{/each}}{{/each}}
             {{#each dataItemMappings}}{{#each targetDataItem.classifications}}{{#if classification}},{{../targetDataItem.name}}{{/if}}{{/each}}{{/each}}
             ORDER BY [{{../conventions.loadDateTimeAttribute}}] ASC, [{{../conventions.eventDateTimeAttribute}}] ASC, [{{../conventions.changeDataCaptureAttribute}}] ASC) = [{{../conventions.changeDataCaptureAttribute}}]
           THEN 'Same'
           ELSE 'Different'
         END AS [CDC_CHANGE_INDICATOR],
         CASE 
           WHEN LEAD([{{../conventions.loadDateTimeAttribute}}],1,'9999-12-31') OVER (PARTITION BY {{#each businessKeyDefinitions}}{{#unless @first}},{{/unless}}{{#each businessKeyComponentMappings}}
              {{targetDataItem.name}}{{#unless @last}},{{/unless}}{{/each}}{{/each}}
             {{#each dataItemMappings}}{{#each targetDataItem.classifications}}{{#if classification}},{{../targetDataItem.name}}{{/if}}{{/each}}{{/each}}
             ORDER BY [{{../conventions.loadDateTimeAttribute}}] ASC, [{{../conventions.eventDateTimeAttribute}}] ASC, [{{../conventions.changeDataCaptureAttribute}}] ASC) = [{{../conventions.loadDateTimeAttribute}}]
           THEN 'Same'
           ELSE 'Different'
         END AS [TIME_CHANGE_INDICATOR]
      FROM
      (
        SELECT
          [{{../conventions.loadDateTimeAttribute}}],
          [{{../conventions.eventDateTimeAttribute}}],
          --[{{../conventions.recordSourceAttribute}}],
          [{{../conventions.sourceRowIdAttribute}}],
          [{{../conventions.changeDataCaptureAttribute}}],{{#each businessKeyDefinitions}} {{#each businessKeyComponentMappings}}
          CAST ({{sourceDataItems.0.name}} AS NVARCHAR(100)) AS [{{targetDataItem.name}}],{{/each}}{{/each}}        
          {{#each dataItemMappings}}
          [{{sourceDataItems.0.name}}] AS [{{targetDataItem.name}}],
          {{/each}}
           HASHBYTES('MD5',{{#each dataItemMappings}}
            ISNULL(RTRIM(CONVERT(NVARCHAR(100),[{{sourceDataItems.0.name}}])), 'N/A') + '#~!'{{#unless @last}} +{{/unless}}{{/each}}
           ) AS [COMBINED_VALUE]
        FROM [{{sourceDataObjects.0.dataObjectConnection.extensions.1.value}}].[{{sourceDataObjects.0.name}}]
        {{#if filterCriterion}}WHERE {{filterCriterion}} {{/if}}
        UNION
        SELECT DISTINCT
          '1900-01-01' AS [{{../conventions.loadDateTimeAttribute}}],
          '1900-01-01' AS [{{../conventions.eventDateTimeAttribute}}],
          --'Data Warehouse' AS [{{../conventions.recordSourceAttribute}}],
          0 AS [{{../conventions.sourceRowIdAttribute}}],
          'N/A' AS  [{{../conventions.changeDataCaptureAttribute}}],{{#each businessKeyDefinitions}} {{#each businessKeyComponentMappings}}
          CAST ({{sourceDataItems.0.name}} AS NVARCHAR(100)) AS [{{targetDataItem.name}}],{{/each}}{{/each}}        
          {{#each dataItemMappings}}
          {{stringcompare targetDataItem.classifications.0.classification 'MultiActive'}}[{{sourceDataItems.0.name}}]{{else}}NULL{{/stringcompare}} AS [{{sourceDataItems.0.name}}],
          {{/each}}
          0x00000000000000000000000000000000 AS COMBINED_VALUE
        FROM [{{sourceDataObjects.0.dataObjectConnection.extensions.1.value}}].[{{sourceDataObjects.0.name}}]
   ) sub
) combined_value
WHERE 
  ([VALUE_CHANGE_INDICATOR] = 'Different' AND  [{{../conventions.changeDataCaptureAttribute}}] IN ('C')) 
  OR
  ([CDC_CHANGE_INDICATOR] = 'Different' AND [TIME_CHANGE_INDICATOR] = 'Different')
{{/each}}
