{{#each dataObjectMappings}}
CREATE OR ALTER VIEW [{{../conventions.vdwSchemaName}}].[{{targetDataObject.name}}] 
AS
--
-- Link Satellite View definition for {{../dataObjectMappings.0.targetDataObject.name}}
--
-- Generated from template '200 Data Vault Link-Satellite Driving Key View'.
--

SELECT 
    HASHBYTES('MD5', {{#each businessKeyDefinitions}}{{#unless @first}} +{{/unless}}{{!-- Create the Surrogate Key using the Business Key components --}}{{#each businessKeyComponentMappings}}
       ISNULL(RTRIM(CONVERT(NVARCHAR(100), {{targetDataItem.name}})), 'N/A') + '#~!'{{#unless @last}} +{{/unless}}{{/each}}{{/each}}{{#each businessKeyDefinitions}}{{#if @first}}
    ) AS {{surrogateKey}},{{/if}}{{/each}}
    {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}--[{{targetDataItem.name}}]{{#unless @last}},{{/unless}}
    {{/each}}{{/each}}[{{../conventions.loadDateTimeAttribute}}],
    [{{../conventions.sourceRowIdAttribute}}],
    --COALESCE (
    --  LEAD (DATEADD(mcs,[{{../conventions.sourceRowIdAttribute}}], {{../conventions.loadDateTimeAttribute}}) ) OVER
    --  ( PARTITION BY 
    --       {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}{{#each sourceDataItems}}{{#each extensions}}{{#stringcompare key "isDrivingKey"}}   [{{../../../targetDataItem.name}}]{{#unless @last}},{{/unless}}{{/stringcompare}}{{/each}}{{/each}}{{/each}}{{/each}}
    --   ORDER BY {{../conventions.loadDateTimeAttribute}}),
    --   CAST( '9999-12-31' AS DATETIME)
    --) AS [{{../conventions.expiryDateTimeAttribute}}],
    --CASE
    --  WHEN ( LEAD ({{../conventions.loadDateTimeAttribute}}) OVER (PARTITION BY {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}{{#each sourceDataItems}}{{#stringcompare classifications.0.classification "DrivingKey"}}{{../../targetDataItem.name}}{{#unless @last}},{{/unless}}{{/stringcompare}}{{/each}}{{/each}}{{/each}}
    --     ORDER BY {{../conventions.loadDateTimeAttribute}})) IS NULL
    --   THEN 'Y'
    --   ELSE 'N'
    --END AS CURRENT_RECORD_INDICATOR,
    -1 AS {{../conventions.etlProcessAttribute}}, {{!-- List out the Control Framework attributes --}}
    {{../conventions.changeDataCaptureAttribute}},
    --CASE
    --  WHEN {{../conventions.changeDataCaptureAttribute}} = 'D' THEN 'Y'
    --  ELSE 'N'
    --END AS [DELETED_RECORD_INDICATOR],
    HASHBYTES('MD5',
      ISNULL(RTRIM(CONVERT(NVARCHAR(100),{{../conventions.changeDataCaptureAttribute}})), 'N/A') + '#~!' +
      {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}ISNULL(RTRIM(CONVERT(NVARCHAR(100),{{targetDataItem.name}})), 'N/A') + '#~!'{{#unless @last}} +{{/unless}}
     {{/each}}{{/each}}) AS [{{../conventions.recordChecksumAttribute}}],
    {{#each dataItemMappings}}
    [{{targetDataItem.name}}]{{# unless @last}},{{/unless}}
    {{/each}}     
FROM
(
  SELECT 
    [{{../conventions.loadDateTimeAttribute}}],
    [{{../conventions.sourceRowIdAttribute}}],
    [{{../conventions.eventDateTimeAttribute}}],
    [{{../conventions.changeDataCaptureAttribute}}],{{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}
    [{{sourceDataItems.0.name}}] AS [{{targetDataItem.name}}],{{/each}}{{/each}}
    {{#each dataItemMappings}}
    [{{sourceDataItems.0.name}}] AS [{{targetDataItem.name}}],
    {{/each}}
    {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}{{#each sourceDataItems}}{{#stringdiff extensions.0.key "isDrivingKey"}}LAG ([{{../name}}], 1, '0')  OVER (
        PARTITION BY {{#each ../../../../businessKeyDefinitions}}{{#each businessKeyComponentMappings}}{{#each sourceDataItems}}{{#each extensions}}
                {{#stringcompare key "isDrivingKey"}}   [{{../../name}}]{{#unless @last}},{{/unless}}{{/stringcompare}}{{/each}}{{/each}}{{/each}}{{/each}}
        ORDER BY [{{../../../../../conventions.loadDateTimeAttribute}}]
   ) AS PREVIOUS_FOLLOWER_KEY{{@index}}    {{/stringdiff}}{{/each}}{{/each}}{{/each}}
  FROM [{{lookupExtension sourceDataObjects.0.extensions "datastore"}}].[{{lookupExtension sourceDataObjects.0.extensions "location"}}].[{{sourceDataObjects.0.name}}]
  WHERE NOT
  ([{{../conventions.sourceRowIdAttribute}}]>1 AND [{{../conventions.changeDataCaptureAttribute}}] ='D')
 {{#if filterCriterion}}{{#stringcompare filterCriterion ""}}{{else}}AND {{filterCriterion}}{{/stringcompare}}{{/if}}

  /* -- Dummy record only for example purposes.
  UNION
  SELECT 
    [{{../conventions.loadDateTimeAttribute}}],
    [{{../conventions.sourceRowIdAttribute}}],
    [{{../conventions.eventDateTimeAttribute}}],
    [{{../conventions.changeDataCaptureAttribute}}],{{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}
    [{{targetDataItem.name}}],{{/each}}{{/each}}
    {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}{{#each sourceDataItems}}{{#stringdiff extensions.0.key "isDrivingKey"}}'{{@index}}'  AS PREVIOUS_FOLLOWER_KEY{{@index}}{{/stringdiff}}{{/each}}{{/each}}{{/each}}
  FROM 
  (
     SELECT
          '1900-01-01' AS [{{../conventions.loadDateTimeAttribute}}],
          1 AS [{{../conventions.sourceRowIdAttribute}}],
          '1900-01-01' AS [{{../conventions.eventDateTimeAttribute}}],
          --'Data Warehouse' AS [{{../conventions.recordSourceAttribute}}],
          'C' AS  [{{../conventions.changeDataCaptureAttribute}}],{{#each businessKeyDefinitions}}
          {{#each businessKeyComponentMappings}}[{{sourceDataItems.0.name}}] AS [{{targetDataItem.name}}],
          {{/each}}{{/each}}DENSE_RANK() OVER (
                PARTITION BY {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}{{#each sourceDataItems}}{{#each extensions}}
                {{#stringcompare key "isDrivingKey"}}   [{{../../name}}]{{#unless @last}},{{/unless}}{{/stringcompare}}{{/each}}{{/each}}{{/each}}{{/each}}
                ORDER BY [{{../conventions.loadDateTimeAttribute}}], [{{../conventions.sourceRowIdAttribute}}], {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}{{#each sourceDataItems}}{{#stringcompare classifications.0.classification "DrivingKey"}}{{name}}{{#unless @last}},{{/unless}}{{/stringcompare}}{{/each}}{{/each}}{{/each}} ASC
           ) AS ROWVERSION
        FROM [{{lookupExtension sourceDataObjects.0.extensions "datastore"}}].[{{lookupExtension sourceDataObjects.0.extensions "location"}}].[{{sourceDataObjects.0.name}}]
   ) dummysub
   WHERE ROWVERSION=1
   */
) sub
WHERE 
    {{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}{{#each sourceDataItems}}{{#stringdiff extensions.0.key "isDrivingKey"}}{{../../targetDataItem.name}} != PREVIOUS_FOLLOWER_KEY{{@index}}{{/stringdiff}}{{/each}}{{/each}}{{/each}}
-- ORDER BY 
{{#each businessKeyDefinitions}}{{#each businessKeyComponentMappings}}{{#each sourceDataItems}}{{#stringcompare extensions.0.key "isDrivingKey"}}--   [{{../../targetDataItem.name}}],{{/stringcompare}}{{/each}}{{/each}}{{/each}}
--   [{{../conventions.loadDateTimeAttribute}}]

{{/each}}
